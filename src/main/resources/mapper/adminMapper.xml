<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.choongang.concert.mapper.admin.AdminMapper">





<select id="getUserList" parameterType="com.choongang.concert.dto.admin.PageDto" resultType="com.choongang.concert.dto.admin.UserInfoDTO">
    SELECT
        *
    FROM
        user
    ORDER BY
        id DESC
    LIMIT #{paginationDto.limitStart}, #{recordSize}
</select>
    


    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.choongang.concert.dto.admin.PageDto" resultType="int">
        SELECT
            COUNT(*)
        FROM
            user
    </select>



	<!-- statics.html에 필요한 sql 쿼리들-->
	
	<!-- SecondDonut 차트 (연령대별 통계) -->
	<select id="ageGroup" parameterType="com.choongang.concert.dto.admin.SecondDonutDto" resultType="int">
		SELECT COUNT(age) AS ageGroup FROM user WHERE age BETWEEN 10 AND 19 UNION ALL
		SELECT COUNT(age) FROM user WHERE age BETWEEN 20 AND 29 UNION ALL
		SELECT COUNT(age) FROM user WHERE age BETWEEN 30 AND 39 UNION ALL
		SELECT COUNT(age) FROM user WHERE age BETWEEN 40 AND 109
	</select>
		

	<!-- Bar 차트 (예매율 통게) -->
	<select id="reservationGroup" parameterType="com.choongang.concert.dto.admin.BarDto" resultType="int">
SELECT COUNT(concert_id) AS reservationGroup FROM ticket WHERE concert_id = 1 union all
		SELECT COUNT(concert_id) FROM ticket WHERE concert_id = 2 union all
		SELECT COUNT(concert_id) FROM ticket WHERE concert_id = 3;
	</select>
	
	<!-- Bar2 차트 (실시간 좌석 통게) -->
    <resultMap id="bar2DtoResultMap" type="com.choongang.concert.dto.admin.Bar2Dto">
        <id property="concert_id" column="concert_id"/>
        <result property="firstConDay" column="firstConDay"/>
        <result property="secondConDay" column="secondConDay"/>
        <result property="thirdConDay" column="thirdConDay"/>
    </resultMap>

    <select id="seatGroup" resultMap="bar2DtoResultMap">
        SELECT t.concert_id,
               SUM(CASE WHEN s.seat_type = 'R' THEN 1 ELSE 0 END) AS firstConDay,
               SUM(CASE WHEN s.seat_type = 'S' THEN 1 ELSE 0 END) AS secondConDay,
               SUM(CASE WHEN s.seat_type = 'Vip' THEN 1 ELSE 0 END) AS thirdConDay
        FROM ticket t 
        LEFT OUTER JOIN seat s ON t.seat_number = s.seat_number
        GROUP BY t.concert_id;
    </select>
	
	
	<!-- Donut 차트 (성비별 통게) -->
	<select id="genderGroup" parameterType="com.choongang.concert.dto.admin.DonutDto" resultType="int">
		select count(id) as genderGroup from user where gender=0 union all
		select count(id) from user where gender=1;
	</select>
	
	
	<!-- Area 차트 (매출 현황) -->
	<select id="areaGroup" parameterType="com.choongang.concert.dto.admin.AreaDto" resultType="com.choongang.concert.dto.admin.AreaDto">
		SELECT
    		t.concert_id AS concertDate,
    			SUM(CASE WHEN t.discount_yn = 1 THEN s.price * 0.7 ELSE s.price END) AS total_price
		FROM
		    ticket AS t
		JOIN
		    seat AS s ON t.seat_number = s.seat_number
		GROUP BY
		    t.concert_id
	</select>
	
	
	
	<!-- qna 게시판 관리 -->
	
	<!-- qna 게시물 조회 -->
	<select id="getQnaList" parameterType="com.choongang.concert.dto.admin.QnaPostDto" resultType="com.choongang.concert.dto.admin.QnaPostDto">
		select q.id AS id, title, content, created_at AS Date, u.nickname AS writer
		from qna_board q left outer join `user` u
		on q.user_id = u.id;
	</select>
	
	<!-- qna 게시물 수정 -->
	<update id="updateQna" parameterType="com.choongang.concert.dto.admin.QnaPostDto">
		update qna_board
		set title =#{title} , content =#{content}
		where id=#{id}
	</update>
	

	
	
	<update id="deleteQna" parameterType="List">
	    update qna_board
	    set delete_yn = 1
	    where id in
	    <foreach collection="list" item="id" open="(" separator="," close=")">
	        #{ids}
	    </foreach>
	</update>
</mapper>